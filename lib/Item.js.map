{"version":3,"sources":["../src/Item.js"],"names":["React","Component","PropTypes","DragSource","DropTarget","Item","props","hoverIndex","index","maxDepth","isClosestDragging","onMove","dropTargetMonitor","dragItem","getItem","dragIndex","initialOffset","getDifferenceFromInitialOffset","dragNewIndex","x","item","reqAnimationFrameId","window","requestAnimationFrame","handleHover","nextProps","isOver","cancelAnimationFrame","Renderer","renderer","onDragStart","onDragEnd","onDrop","func","isRequired","bool","shape","itemTarget","drop","monitor","didDrop","dropIndex","dropCollect","connect","connectDropTarget","dropTarget","itemSource","beginDrag","id","originalIndex","endDrag","dragCollect","connectDragSource","dragSource","connectDragPreview","dragPreview","isDragging","__dndType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { DragSource, DropTarget } from 'react-dnd';\n\nclass Item extends Component {\n  static propTypes = {\n    renderer: PropTypes.func.isRequired,\n    onDragStart: PropTypes.func.isRequired,\n    onDragEnd: PropTypes.func.isRequired,\n    onMove: PropTypes.func.isRequired,\n    onDrop: PropTypes.func.isRequired,\n    isOver: PropTypes.bool.isRequired,\n    dropTargetMonitor: PropTypes.shape({\n      getItem: PropTypes.func.isRequired,\n      getDifferenceFromInitialOffset: PropTypes.func.isRequired,\n    }).isRequired,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    const { isOver } = this.props;\n    if (nextProps.isOver !== isOver) {\n      if (nextProps.isOver) {\n        this.reqAnimationFrameId = window.requestAnimationFrame(this.handleHover);\n      } else {\n        window.cancelAnimationFrame(this.reqAnimationFrameId);\n        this.reqAnimationFrameId = null;\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.reqAnimationFrameId) {\n      window.cancelAnimationFrame(this.reqAnimationFrameId);\n      this.reqAnimationFrameId = null;\n    }\n  }\n\n  handleHover = () => {\n    const {\n      index: hoverIndex, maxDepth, isClosestDragging, onMove,\n      dropTargetMonitor,\n    } = this.props;\n\n    if (!isClosestDragging) {\n      const dragItem = dropTargetMonitor.getItem();\n      const { index: dragIndex } = dragItem;\n\n      if (maxDepth !== 0 || dragIndex !== hoverIndex) {\n        // Determine mouse position\n        const initialOffset = dropTargetMonitor.getDifferenceFromInitialOffset();\n\n        // Time to actually perform the action\n        const dragNewIndex = onMove(dragIndex, hoverIndex, initialOffset.x);\n\n        // Note: we're mutating the monitor item here!\n        // Generally it's better to avoid mutations,\n        // but it's good here for the sake of performance\n        // to avoid expensive index searches.\n        if (dragNewIndex !== null) {\n          const item = dropTargetMonitor.getItem();\n          item.index = dragNewIndex;\n        }\n      }\n    }\n\n    this.reqAnimationFrameId = window.requestAnimationFrame(this.handleHover);\n  }\n\n  render() {\n    const {\n      renderer: Renderer, onDragStart, onDragEnd, onMove, onDrop, dropTargetMonitor, isOver, ...props\n    } = this.props;\n    return <Renderer {...props} />;\n  }\n}\n\nconst itemTarget = {\n  drop(props, monitor) {\n    if (!monitor.didDrop()) {\n      const dragItem = monitor.getItem();\n      const { index: dragIndex } = dragItem;\n      const { index: dropIndex } = props;\n\n      props.onDrop(dragIndex, dropIndex);\n    }\n  },\n};\n\nconst dropCollect = (connect, monitor) => ({\n  dropTargetMonitor: monitor,\n  isOver: monitor.isOver(),\n  connectDropTarget: connect.dropTarget(),\n});\n\nconst itemSource = {\n  beginDrag(props) {\n    const { index, id } = props;\n    props.onDragStart(index);\n\n    return { index, originalIndex: index, id };\n  },\n\n  endDrag(props, monitor) {\n    const { index } = props;\n    const didDrop = monitor.didDrop();\n    props.onDragEnd(index, didDrop);\n  },\n};\n\nconst dragCollect = (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  connectDragPreview: connect.dragPreview(),\n  isDragging: monitor.isDragging(),\n});\n\nexport default DropTarget(props => props.__dndType, itemTarget, dropCollect)(\n  DragSource(props => props.__dndType, itemSource, dragCollect)(Item),\n);\n"],"file":"Item.js"}