{"version":3,"sources":["../src/Sortly.js"],"names":["React","Component","PropTypes","update","DropTarget","decreaseTreeItem","increaseTreeItem","moveTreeItem","findDescendants","Item","DEFAULT_TYPE","reduceOffset","noop","Sortly","items","props","draggingDescendants","dragIndex","onDragStart","state","originalItems","descendants","length","forEach","id","setState","didDrop","cancelOnDropOutside","ondDragEnd","monitor","change","hoverIndex","offsetX","updateFn","newIndex","threshold","Math","abs","result","newState","onMove","cancelOnDragOutside","dragData","getItem","index","originalIndex","dropIndex","onDrop","onChange","nextProps","isOver","handleEnter","handleLeave","type","Comp","component","itemRenderer","connectDropTarget","map","item","handleDragStart","handleDragEnd","handleMove","handleDrop","string","isRequired","oneOfType","func","arrayOf","shape","path","array","number","maxDepth","bool","Infinity","spec","collect","connect","dropTarget","WithDropTarget","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport { DropTarget } from 'react-dnd';\n\nimport { decreaseTreeItem, increaseTreeItem, moveTreeItem, findDescendants } from './utils';\nimport Item from './Item';\n\nconst DEFAULT_TYPE = 'REACT_SORTLY';\nlet reduceOffset = 0;\nconst noop = () => {};\nclass Sortly extends Component {\n  static propTypes = {\n    type: PropTypes.string.isRequired,\n    component: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    items: PropTypes.arrayOf(PropTypes.shape({\n      path: PropTypes.array.isRequired,\n    })).isRequired,\n    itemRenderer: PropTypes.func.isRequired,\n    threshold: PropTypes.number,\n    maxDepth: PropTypes.number,\n    cancelOnDragOutside: PropTypes.bool,\n    cancelOnDropOutside: PropTypes.bool,\n    onMove: PropTypes.func,\n    onDragStart: PropTypes.func,\n    ondDragEnd: PropTypes.func,\n    onDrop: PropTypes.func,\n    monitor: PropTypes.shape({\n      getItem: PropTypes.func.isRequired,\n    }).isRequired,\n    isOver: PropTypes.bool.isRequired,\n    connectDropTarget: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n  }\n\n  static defaultProps = {\n    component: 'div',\n    threshold: 20,\n    maxDepth: Infinity,\n    cancelOnDragOutside: false,\n    cancelOnDropOutside: false,\n    onMove: null,\n    onDragStart: noop,\n    ondDragEnd: noop,\n    onDrop: noop,\n  }\n\n  state = { items: this.props.items, draggingDescendants: {} }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.items !== this.props.items) {\n      this.setState({ items: nextProps.items });\n    }\n\n    if (nextProps.isOver !== this.props.isOver) {\n      if (nextProps.isOver) {\n        this.handleEnter();\n      } else {\n        this.handleLeave();\n      }\n    }\n  }\n\n  handleDragStart = (dragIndex: number) => {\n    this.props.onDragStart(dragIndex);\n    // Don't allow to drop to it descendants\n    const { items } = this.state;\n    this.originalItems = items;\n\n    const descendants = findDescendants(items, dragIndex);\n\n    if (descendants.length > 0) {\n      const draggingDescendants = {};\n      descendants.forEach(({ id }) => {\n        draggingDescendants[id] = true;\n      });\n\n      this.setState({ draggingDescendants });\n    }\n  }\n\n  handleDragEnd = (dragIndex: number, didDrop: boolean) => {\n    const { cancelOnDropOutside, ondDragEnd, monitor } = this.props;\n\n    ondDragEnd(dragIndex, didDrop);\n\n    reduceOffset = 0;\n    this.setState({ draggingDescendants: {} });\n    if (cancelOnDropOutside) {\n      if (!monitor.didDrop()) {\n        // restore\n        this.setState({ items: this.originalItems });\n        this.originalItems = null;\n      } else {\n        this.change();\n      }\n    } else {\n      this.change();\n    }\n  }\n\n  handleMove = (dragIndex: number, hoverIndex: number, offsetX: number): number|null => {\n    const { items } = this.state;\n    let updateFn;\n    let newIndex;\n\n    if (dragIndex === hoverIndex) {\n      const { threshold } = this.props;\n\n      // Check that if it move horizontally\n      if (Math.abs(offsetX + reduceOffset) < threshold) {\n        return null;\n      }\n\n      // Move to the right, meaning decrease horizontal level\n      // It now is a child of it previous sibling\n      if (offsetX > 0) {\n        updateFn = decreaseTreeItem(items, dragIndex);\n        if (!updateFn) {\n          return null;\n        }\n        reduceOffset -= threshold;\n      } else { // Move to the left, meaning increase horizontal level\n        updateFn = increaseTreeItem(items, dragIndex);\n        if (!updateFn) {\n          return null;\n        }\n        reduceOffset += threshold;\n      }\n\n      newIndex = hoverIndex;\n    } else {\n      const result = moveTreeItem(items, dragIndex, hoverIndex);\n      updateFn = result.updateFn; // eslint-disable-line prefer-destructuring\n      newIndex = result.newIndex; // eslint-disable-line prefer-destructuring\n    }\n\n    const newState = update(this.state, {\n      items: updateFn,\n    });\n\n    if (this.props.onMove) {\n      const result = this.props.onMove(newState.items, dragIndex, newIndex);\n\n      if (!result) {\n        return null;\n      }\n\n      if (result !== true) {\n        newState.items = result;\n      }\n    }\n\n    this.setState(newState);\n\n    return newIndex;\n  }\n\n  handleEnter = () => {\n\n  }\n\n  handleLeave = () => {\n    const { cancelOnDragOutside, monitor } = this.props;\n\n    if (cancelOnDragOutside && !monitor.didDrop()) {\n      const dragData = monitor.getItem();\n      dragData.index = dragData.originalIndex;\n      this.setState({ items: this.originalItems });\n    }\n  }\n\n  handleDrop = (dragIndex: number, dropIndex: number) => {\n    this.props.onDrop(dragIndex, dropIndex);\n  }\n\n  change = () => {\n    this.props.onChange(this.state.items);\n  }\n\n  render() {\n    const { type, component: Comp, itemRenderer, connectDropTarget } = this.props;\n    const { items, draggingDescendants } = this.state;\n\n    return connectDropTarget(\n      <Comp>\n        {items.map((item, index) => (\n          <Item\n            {...item}\n            key={item.id}\n            __dndType={type}\n            index={index}\n            renderer={itemRenderer}\n            isClosestDragging={draggingDescendants[item.id] === true}\n            onDragStart={this.handleDragStart}\n            onDragEnd={this.handleDragEnd}\n            onMove={this.handleMove}\n            onDrop={this.handleDrop}\n          />\n        ))}\n      </Comp>,\n    );\n  }\n}\n\nconst spec = {\n\n};\n\nconst collect = (connect, monitor) => ({\n  monitor,\n  isOver: monitor.isOver(),\n  connectDropTarget: connect.dropTarget(),\n});\n\nconst WithDropTarget = DropTarget(props => props.type, spec, collect)(Sortly);\nWithDropTarget.defaultProps = {\n  type: DEFAULT_TYPE,\n};\n\nexport default WithDropTarget;\n"],"file":"Sortly.js"}